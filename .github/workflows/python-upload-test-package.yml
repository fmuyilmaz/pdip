# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python upload test package

on:
  push:
    tags:
      - 'test-v*.*.*'

jobs:
  build:

    if: github.repository == 'ahmetcagriakca/pdip' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Branch name
      id: branch_name
      run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest and coverage
      run: |
        coverage run  --source=pdip run_tests.py 
        coverage report -m --omit="*/tests/*,*/site-packages/*"
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}
        PYPI_PACKAGE_VERSION: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
